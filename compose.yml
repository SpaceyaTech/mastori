version: "3.8"

x-environment: &commonEnvironment
  - DATABASE_DB=${DATABASE_DB}
  - DATABASE_USER=${DATABASE_USER}
  - DATABASE_PASSWORD=${DATABASE_PASSWORD}
  - DATABASE_HOST=database
  - DATABASE_PORT=${DATABASE_PORT}
  - ADMIN_USERNAME=${ADMIN_USERNAME}
  - ADMIN_EMAIL=${ADMIN_EMAIL}
  - ADMIN_PASSWORD=${ADMIN_PASSWORD}
  - CELERY_BROKER=${CELERY_BROKER}
  - SECRET_KEY=${SECRET_KEY}
  - EMAIL_HOST=${EMAIL_HOST}
  - EMAIL_USE_TLS=${EMAIL_USE_TLS}
  - EMAIL_PORT=${EMAIL_PORT}
  - EMAIL_USE_SSL=${EMAIL_USE_SSL}
  - EMAIL_HOST_USER=${EMAIL_HOST_USER}
  - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
  - EMAIL_SENDER=${EMAIL_SENDER}

services:

  application:

    build: .

    ports:
      - 80:8000

    depends_on:

      database:

        condition: service_healthy

    environment: *commonEnvironment

    command: gunicorn --bind 0.0.0.0:8000 --workers ${WORKERS} CMS.wsgi

  celery:

    build: .

    depends_on:
      - application
      - redis
    
    command: celery --app=CMS worker --loglevel=info

    environment: *commonEnvironment

  redis:

    image: redis:7-alpine

  database:

    image: postgres:alpine

    expose:
      - 5432

    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_DB}

    healthcheck:
      test: ["CMD", "pg_isready",'-U${DATABASE_USER}', '-d${DATABASE_DB}']
      interval: 10s
      timeout: 5s
      retries: 5

    volumes:
      - type: volume
        source: pgdata
        target: /var/lib/postgresql/data
    
volumes:

  pgdata:
  
    driver: local